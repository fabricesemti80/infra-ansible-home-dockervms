- name: DEPLOY Sonarr
  block:
  - name: Create Sonarr Data Directory
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
    with_items:
    - "{{ sonarr_data_directory }}"

  - name: Sonarr
    community.docker.docker_container:
      name: "{{ sonarr_container_name }}"
      image: "{{ sonarr_image_name }}:{{ sonarr_image_version }}"
      pull: true
      volumes:
      - "{{ sonarr_tv_directory }}:/tv:rw"
      - "{{ sonarr_download_directory }}:/downloads:rw"
      - "{{ sonarr_data_directory }}:/config:rw"
      ports:
      - "{{ sonarr_port }}:8989"
      env:
        TZ: "{{ ansible_nas_timezone }}"
        PUID: "{{ sonarr_user_id }}"
        PGID: "{{ sonarr_group_id }}"
      restart_policy: unless-stopped
      networks:
        - name: "{{ docker_network }}"
      memory: "{{ sonarr_memory }}"
      labels:
        traefik.enable: "{{ sonarr_available_externally | string }}"
        traefik.http.routers.sonarr.rule: "Host(`{{ sonarr_hostname }}.{{ ansible_nas_domain }}`)"
        traefik.http.routers.sonarr.tls.certresolver: "letsencrypt"
        traefik.http.routers.sonarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
        traefik.http.routers.sonarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
        traefik.http.services.sonarr.loadbalancer.server.port: "8989"
        homepage.group: "Media"
        homepage.name: "Sonarr"
        homepage.icon: sh-sonarr
        homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ sonarr_port }}"

  - name: Get Sonarr API key
    ansible.builtin.command: grep '<ApiKey>' "{{ sonarr_data_directory }}/config.xml"
    register: sonarr_api_key_raw
    changed_when: false

  - name: Set Sonarr API key variable
    ansible.builtin.set_fact:
      sonarr_api_key: "{{ sonarr_api_key_raw.stdout | regex_replace('<ApiKey>(.*)</ApiKey>', '\\1') }}"

  - name: Display Sonarr API key
    ansible.builtin.debug:
      msg: "Sonarr API Key: {{ sonarr_api_key }}"
  when: sonarr_enabled is true


- name: REMOVE Sonarr
  block:
  - name: Stop Sonarr
    community.docker.docker_container:
      name: "{{ sonarr_container_name }}"
      state: absent

  - name: Remove Sonarr Data Directory
    ansible.builtin.file:
      path: "{{ sonarr_data_directory }}"
      state: absent
  when: sonarr_enabled is false
