services:
  broker:
    image: "{{ paperless_ngx_redis_image_name }}:{{ paperless_ngx_redis_image_version }}"
    container_name: "{{ paperless_ngx_redis_container_name }}"
    restart: unless-stopped
    volumes:
      - "{{ paperless_ngx_volumes_redisdata | default(paperless_ngx_config_directory ~ '/redisdata') }}:/data"
    command:
      - redis-server
      - --appendonly
      - "yes"
{% if paperless_ngx_redis_password is defined and paperless_ngx_redis_password %}
      - --requirepass
      - "{{ paperless_ngx_redis_password }}"
{% endif %}
    deploy:
      resources:
        limits:
          memory: "{{ paperless_ngx_redis_memory }}"

  db:
    image: "{{ paperless_ngx_db_image_name }}:{{ paperless_ngx_db_image_version }}"
    container_name: "{{ paperless_ngx_db_container_name }}"
    restart: unless-stopped
    environment:
      POSTGRES_DB: "{{ paperless_ngx_postgres_db }}"
      POSTGRES_USER: "{{ paperless_ngx_postgres_user }}"
      POSTGRES_PASSWORD: "{{ paperless_ngx_postgres_password }}"
    volumes:
      - "{{ paperless_ngx_volumes_pgdata | default(paperless_ngx_postgres_directory) }}:/var/lib/postgresql/data"
    deploy:
      resources:
        limits:
          memory: "{{ paperless_ngx_postgres_memory }}"

  webserver:
    image: "{{ paperless_ngx_uiserver_image_name }}:{{ paperless_ngx_uiserver_image_version }}"
    container_name: "{{ paperless_ngx_uiserver_container_name }}"
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "{{ paperless_ngx_port }}:8000"
    environment:
      PAPERLESS_REDIS: "redis://{% if paperless_ngx_redis_password is defined and paperless_ngx_redis_password %}:{{ paperless_ngx_redis_password }}@{% endif %}broker:6379"
      PAPERLESS_DBHOST: db
      PAPERLESS_DBNAME: "{{ paperless_ngx_postgres_db }}"
      PAPERLESS_DBUSER: "{{ paperless_ngx_postgres_user }}"
      PAPERLESS_DBPASS: "{{ paperless_ngx_postgres_password }}"
      USERMAP_UID: "{{ paperless_ngx_user_id }}"
      USERMAP_GID: "{{ paperless_ngx_group_id }}"
      PAPERLESS_OCR_LANGUAGES: "{{ paperless_ngx_languages }}"
    volumes:
      - "{{ paperless_ngx_volumes_data | default(paperless_ngx_data_directory) }}:/usr/src/paperless/data"
      - "{{ paperless_ngx_volumes_media | default(paperless_ngx_media_directory) }}:/usr/src/paperless/media"
      - "{{ paperless_ngx_export_directory }}:/usr/src/paperless/export"
      - "{{ paperless_ngx_consume_directory }}:/usr/src/paperless/consume"
    labels:
      traefik.enable: "{{ paperless_ngx_available_externally | string }}"
      traefik.http.routers.paperless_ngx.rule: "Host(`{{ paperless_ngx_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.paperless_ngx.tls.certresolver: "letsencrypt"
      traefik.http.routers.paperless_ngx.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.paperless_ngx.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.paperless_ngx.loadbalancer.server.port: "8000"
      homepage.group: "Documents"
      homepage.name: "Paperless-ngx"
      homepage.icon: mdi-file-document-multiple
      homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ paperless_ngx_port }}"
    deploy:
      resources:
        limits:
          memory: "{{ paperless_ngx_ui_memory }}"
