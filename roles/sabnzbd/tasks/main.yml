- name: DEPLOY SABnzbd
  block:
  - name: Create Sabnzbd Data Directory
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
    with_items:
    - "{{ sabnzbd_data_directory }}"

  - name: Configure SABnzbd host whitelist
    ansible.builtin.ini_file:
      path: "{{ sabnzbd_data_directory }}/sabnzbd.ini"
      section: misc
      option: host_whitelist
      value: "{{ sabnzbd_container_name }}"
      create: true
    register: sabnzbd_config_whitelist

  - name: Configure SABnzbd local ranges
    ansible.builtin.ini_file:
      path: "{{ sabnzbd_data_directory }}/sabnzbd.ini"
      section: misc
      option: local_ranges
      value: "127.0.0.1, 10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 172.0.0.0/8"
      create: true
    register: sabnzbd_config_ranges

  - name: Configure SABnzbd download directory
    ansible.builtin.ini_file:
      path: "{{ sabnzbd_data_directory }}/sabnzbd.ini"
      section: misc
      option: download_dir
      value: "/downloads"
      create: true
    register: sabnzbd_config_download_dir

  - name: Configure SABnzbd complete directory
    ansible.builtin.ini_file:
      path: "{{ sabnzbd_data_directory }}/sabnzbd.ini"
      section: misc
      option: complete_dir
      value: "/downloads/complete"
      create: true
    register: sabnzbd_config_complete_dir

  - name: Configure SABnzbd incomplete directory
    ansible.builtin.ini_file:
      path: "{{ sabnzbd_data_directory }}/sabnzbd.ini"
      section: misc
      option: incomplete_dir
      value: "/downloads/incomplete"
      create: true
    register: sabnzbd_config_incomplete_dir

  - name: Sabnzbd
    community.docker.docker_container:
      name: "{{ sabnzbd_container_name }}"
      image: "{{ sabnzbd_image_name }}:{{ sabnzbd_image_version }}"
      pull: true
      volumes:
      - "{{ sabnzbd_data_directory }}:/config:rw"
      - "{{ sabnzbd_downloads_directory }}:/downloads"
      - "{{ sabnzbd_incomplete_directory }}:/incomplete-downloads"
      ports:
      - "{{ sabnzbd_port }}:8080"
      env:
        TZ: "{{ ansible_nas_timezone }}"
        PUID: "{{ sabnzbd_user_id }}"
        PGID: "{{ sabnzbd_group_id }}"
      restart_policy: unless-stopped
      networks:
        - name: "{{ docker_network }}"
      labels:
        traefik.enable: "{{ sabnzbd_available_externally | string }}"
        traefik.http.routers.sabnzbd.rule: "Host(`{{ sabnzbd_hostname }}.{{ ansible_nas_domain }}`)"
        traefik.http.routers.sabnzbd.tls.certresolver: "letsencrypt"
        traefik.http.routers.sabnzbd.tls.domains[0].main: "{{ ansible_nas_domain }}"
        traefik.http.routers.sabnzbd.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
        traefik.http.services.sabnzbd.loadbalancer.server.port: "8080"
        homepage.group: "Download Tools"
        homepage.name: "SabNZBD"
        homepage.icon: sh-sabnzbd
        homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ sabnzbd_port }}"

  - name: Restart SABnzbd if config changed
    community.docker.docker_container:
      name: "{{ sabnzbd_container_name }}"
      state: started
      restart: true
    when: sabnzbd_config_whitelist.changed or sabnzbd_config_ranges.changed or sabnzbd_config_download_dir.changed or sabnzbd_config_complete_dir.changed or sabnzbd_config_incomplete_dir.changed

  - name: Get SABnzbd API key
    ansible.builtin.command: grep '^api_key' "{{ sabnzbd_data_directory }}/sabnzbd.ini"
    register: sabnzbd_api_key_raw
    changed_when: false

  - name: Set SABnzbd API key variable
    ansible.builtin.set_fact:
      sabnzbd_api_key: "{{ sabnzbd_api_key_raw.stdout | regex_replace('^api_key = (.+)$', '\\1') }}"

  - name: Display SABnzbd API key
    ansible.builtin.debug:
      msg: "SABnzbd API Key: {{ sabnzbd_api_key }}"
  when: sabnzbd_enabled is true


- name: REMOVE SABnzbd
  block:
  - name: Stop SABnzbd
    community.docker.docker_container:
      name: "{{ sabnzbd_container_name }}"
      state: absent

  - name: Remove SABnzbd Data Directory
    ansible.builtin.file:
      path: "{{ sabnzbd_data_directory }}"
      state: absent
  when: sabnzbd_enabled is false
