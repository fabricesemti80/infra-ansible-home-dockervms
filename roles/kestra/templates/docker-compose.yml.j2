services:
  postgres:
    image: "{{ kestra_db_image_name }}:{{ kestra_db_image_version }}"
    container_name: "{{ kestra_db_container_name }}"
    restart: unless-stopped
    environment:
      POSTGRES_DB: "{{ kestra_postgres_db }}"
      POSTGRES_USER: "{{ kestra_postgres_user }}"
      POSTGRES_PASSWORD: "{{ kestra_postgres_password }}"
    volumes:
      - "{{ kestra_volumes_pgdata | default(kestra_postgres_directory) }}:/var/lib/postgresql/data"
    deploy:
      resources:
        limits:
          memory: "{{ kestra_postgres_memory }}"

  kestra:
    image: "{{ kestra_image_name }}:{{ kestra_image_version }}"
    container_name: "{{ kestra_container_name }}"
    restart: unless-stopped
    environment:
      SECRET_GITHUB_ACCESS_TOKEN: "{{ kestra_github_access_token  }}"
    pull_policy: always
    # Note that this is meant for development only. Refer to the documentation for production deployments of Kestra which runs without a root user.
    user: "root"
    command: server standalone --worker-thread={{ kestra_worker_threads }} --config /etc/config/application.yaml
    volumes:
      - "{{ kestra_volumes_kestra_data | default(kestra_data_directory) }}:/app/storage"
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ kestra_temp_directory }}:/tmp/kestra-wd"
      - "{{ kestra_config_directory }}/application.yaml:/etc/config/application.yaml"
    ports:
      - "{{ kestra_port }}:8080"
      - "{{ kestra_internal_port }}:8081"
    depends_on:
      postgres:
        condition: service_started
    labels:
      traefik.enable: "{{ kestra_available_externally | string }}"
      traefik.http.routers.kestra.rule: "Host(`{{ kestra_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.kestra.tls.certresolver: "letsencrypt"
      traefik.http.routers.kestra.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.kestra.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.kestra.loadbalancer.server.port: "8080"
      homepage.group: "Automation"
      homepage.name: "Kestra"
      homepage.icon: si-kestra
      homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ kestra_port }}"
    deploy:
      resources:
        limits:
          memory: "{{ kestra_memory }}"

volumes:
  kestra-data: